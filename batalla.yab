rem **********************************************************
tam_a = 50              rem cantidad de soldados ejercito a
tam_b = 50              rem cantidad de soldados ejercito b
l_a = 5                 rem distancia de paso del ejercito a
l_b = 5                 rem distancia de paso del ejercito b
rad_a = 5               rem tamanho de soldados del ejercito a
rad_b = 5               rem tamanho de soldados del ejercito b
dados_a = 5             rem dados del ejercito a
dados_b = 5             rem dados del ejercito b
limit_a = 180           rem angulo de apertura del ejercito a
limit_b = 180           rem angulo de apertura del ejercito b
d = rad_a + rad_b       rem distancia de pelea maxima
t = 0.03                rem tiempo del comando wait
graphics_flag = 1       rem 0: sin graficos; 1: con graficos
output = 0              rem output en consola: 0, en archivo: 1
rem **********************************************************

if(graphics_flag = 1) then
    open window 900, 600
    window origin "lc"
end if
if output = 1 then
    open "batalla.dat" for writing as 1
end if
c_a = tam_a
c_b = tam_b
if (output = 1) then
    print #1 c_a, c_b, 0, 0
else
    print c_a, c_b
end if
dim pos(tam_a + tam_b,4)
for i = tam_a to tam_a + tam_b - 1
    pos(i,2) = 1
    pos(i,0) = 900
next i
x = 0.0
y = 0.0
limit_a = pi*limit_a/360
limit_b = pi*limit_b/360

while(c_a > 0 and c_b > 0)

    rem **mover entidades**

    for i = 0 to tam_a + tam_b - 1
        if(pos(i, 2) = 0)then
            rad = rad_a
            limit = limit_a
            l = l_a
        else
            rad = rad_b
            limit = limit_b
            l = l_b
        end if
        if (pos(i, 3) = 0) then
            if(graphics_flag = 1) then
                clear fill circle pos(i, 0), pos(i, 1), rad
            end if
            angle = (-limit) + (limit*2*ran())
            x = pos(i, 0) + (l * cos(angle))
            y = pos(i, 1) + (l * sin(angle))
            if x > 450 then
                x = pos(i, 0) - (l * cos(angle))
            end if
            if y > 300 or y < -300 then
                y = pos(i, 1) - (l * sin(angle))
            end if
            pos(i, 0) = x
            pos(i, 1) = y
        end if
    next i

    rem **verificar y procesar peleas**

    for i = 0 to tam_a - 1
        for j = tam_a to tam_a + tam_b - 1
            bool1 = pos(i,3) = 0 and pos(j,3) = 0 and pos(i,4)=0 and pos(j,4)=0
            bool2 = ((pos(i, 0) - pos(j, 0))^2 + (pos(i, 1) - pos(j, 1))^2) <= d^2
            if bool1 and bool2 then
                dado1 = 0
                dado2 = 0
                while(dado1 = dado2)
                    dado1 = 0
                    dado2 = 0
                    for k = 1 to dados_a
                        dado1 = dado1 + int(1 + (6*ran()))
                    next k
                    for k = 1 to dados_b
                        dado2 = dado2 + int(1 + (6*ran()))
                    next k
                wend
                if (dado1 > dado2) then
                    pos(j, 3) = 1
                    pos(i, 4) = 1
                    c_b = c_b - 1
                else
                    if(dado1 < dado2)then
                        pos(i, 3) = 1
                        pos(j, 4) = 1
                        c_a = c_a - 1
                    end if
                end if
                if (output = 1) then
                    print #1 c_a, c_b, dado1, dado2
                else
                    print c_a, c_b, dado1, dado2
                end if
            end if
        next j
    next

    rem **dibujar/resetear estado**

    if(graphics_flag = 1) then
        color 155, 50, 50
        for i = 0 to tam_a - 1
            pos(i, 4) = 0
            if (pos(i, 3) = 0) then
                fill circle pos(i, 0), pos(i, 1), rad_a
            end if
        next i
        color 50, 50, 155
        for i = tam_a to tam_a + tam_b - 1
            pos(i, 4) = 0
            if (pos(i, 3) = 0) then
                fill circle pos(i, 0), pos(i, 1), rad_b
            end if
        next i
        wait(t)
    else
        for i = 0 to tam_a + tam_b - 1
            pos(i, 4) = 0
        next i
    end if
wend
if(output = 1) then
    close #1
end if
